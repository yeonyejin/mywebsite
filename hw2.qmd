---
title: "hw2"
jupyter: python3
---

## mpg 데이터를 이용해 분석 문제를 해결해 보세요.


```{python}
import pandas as pd

df = pd.read_csv('mpg.csv')
df

df4 = df.query('displ<= 4')
df5 = df.query('displ>= 5')

df4['hwy'].mean()
df5['hwy'].mean()


```

배기량이 4이하인 자동차의 hwy평균이 더 높다.



Q2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. 'audi'와 'toyota' 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비)의 평균이 더 높은지 알아보세요.

```{python}

import pandas as pd

df = pd.read_csv('mpg.csv')
df

df_audi = df.query('manufacturer == "audi"')
df_toyota = df.query('manufacturer == "toyota"')


df_audi['cty'].mean()
df_toyota['cty'].mean()

```
toyoya의 cty 평균이 더 높은 것을 알 수 있다.

Q.
```{python}

import pandas as pd

df = pd.read_csv('mpg.csv')
df

df_new = df.query('manufacturer in["chevrolet", "ford", "honda"]')

df_new['hwy'].mean()



```

## p153 mpg 데이터를 이용해 분석 문제를 해결해 보세요.

Q1. 'audi'에서 생산한 자동차 중 어떤 자동차 모델위 hwy(고속도로 연비)가 높은지 알아보려고 합니다. 'audi'에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.


```{python}
import pandas as pd

df = pd.read_csv('mpg.csv')
df

df.query('manufacturer == "audi"')\
  .sort_values('hwy', ascending = False)\
  .head(5)



#df_audi = df.query('manufacturer == "audi"')
#df_audi.sort_values('hwy', ascending = False).head(5)


```

## p158 mpg데이터를 이용해 분석문제를 해결해 보세요.
mpg데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다. 

Q1. mpg데이터 복사본을 만들고, cty와 hwy를 더한 '합산 연비 변수'를 추가하세요.

```{python}

import pandas as pd

df = pd.read_csv('mpg.csv')
mpg = df.copy()

mpg.assign( total = mpg['cty'] + mpg['hwy'])


```
Q2. 앞에서 만든 '합산 연비 변수'를 2로 나눠 '평균 연비 변수'를 추가하세요.

```{python}

import pandas as pd

df = pd.read_csv('mpg.csv')
mpg = df.copy()

mpg.assign( total = mpg['cty'] + mpg['hwy'],
            mean = (mpg['cty'] + mpg['hwy'])/2)



```
Q3. '평균 연비 변수'가 가장 높은 자동차 3종의 데이터를 출력하세요.

```{python}

import pandas as pd

df = pd.read_csv('mpg.csv')
mpg = df.copy()

mpg = mpg.assign(
        total = mpg['cty'] + mpg['hwy'],
        mean = (mpg['cty'] + mpg['hwy'])/2)

mean = (mpg['cty'] + mpg['hwy'])/2
mpg.sort_values('mean', ascending = False)\
.head(3)


```

Q4. 1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg원본을 이용하세요.

```{python}
import pandas as pd

mpg = pd.read_csv('mpg.csv')
mpg = mpg.assign(
            total = lambda x:  x['cty'] + x['hwy'],
            mean = lambda x : x['total']/2) \
         .sort_values('mean', ascending = False )\
         .head(3)
mpg


```

