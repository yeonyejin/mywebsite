{
  "hash": "8c9d589af9166bb534c95998c07cfddb",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: hw5\nauthor: 연예진\ndata: 2024 -07-29\ncategories:\n  - bigdata\n---\n\n## 균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요.\n\n\nX ~ 균일분포U(a , b) loc:a, scale: b-a\n\n::: {#9e22b082 .cell execution_count=1}\n``` {.python .cell-code}\nfrom scipy.stats import uniform\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\nx=uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1, 20)\nx\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\narray([[3.76120239, 5.25476795, 5.98354159, ..., 5.52052282, 3.46331313,\n        6.36304209],\n       [3.81230237, 5.47790013, 3.54644336, ..., 4.05912271, 4.00232046,\n        4.28419153],\n       [6.87806623, 5.42743101, 5.81590237, ..., 4.85009972, 4.91928014,\n        6.30225275],\n       ...,\n       [3.04980015, 6.81277037, 6.09363572, ..., 4.42111548, 4.91361723,\n        6.45642442],\n       [4.21226644, 4.96664346, 3.23419205, ..., 5.87233621, 3.55780867,\n        4.56675508],\n       [4.58561676, 5.84064522, 4.09444228, ..., 6.49314178, 6.19412452,\n        3.36168373]])\n```\n:::\n:::\n\n\n## n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고,\nn-1로 나눈 것을 s_2\n\n::: {#37f7f106 .cell execution_count=2}\n``` {.python .cell-code}\nx=uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1, 20)\nx\ns_2=np.var(x, ddof=1)\ns_2\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\nnp.float64(1.3307334304699165)\n```\n:::\n:::\n\n\nn으로 나눈 것을 k_2\n\n::: {#d58b95ad .cell execution_count=3}\n``` {.python .cell-code}\nx=uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1, 20)\nx\nk_2=np.var(x,ddof=0)\nk_2\n\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nnp.float64(1.3362906966463965)\n```\n:::\n:::\n\n\n## s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)\n\n S_2의 분포\n\n::: {#eaa7c14c .cell execution_count=4}\n``` {.python .cell-code}\nx=uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1, 20)\nx.shape\ns_2=np.var(x, ddof=1, axis=1)\n\nsns.histplot(s_2)\nplt.show()\nplt.clf()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](hw5_files/figure-html/cell-5-output-1.png){width=593 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\nk_2의 분포\n\n::: {#0991365c .cell execution_count=5}\n``` {.python .cell-code}\nx=uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1, 20)\nx.shape\nk_2=np.var(x, ddof=0, axis=1)\n\nsns.histplot(k_2)\nplt.show()\nplt.clf()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](hw5_files/figure-html/cell-6-output-1.png){width=593 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n## 각 분포 그래프에 모분산의 위치에 녹색 막대를 그려주세요.\ns_2의 분포 \n\n::: {#1150c135 .cell execution_count=6}\n``` {.python .cell-code}\nx=uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1, 20)\ns_2=np.var(x, ddof=1, axis=1)\n\nsns.histplot(s_2)\nplt.axvline(x.var(), color='green',\n            linestyle='--', linewidth=2)\nplt.show()\nplt.clf()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](hw5_files/figure-html/cell-7-output-1.png){width=593 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\nk_2의 분포\n\n::: {#77542fa6 .cell execution_count=7}\n``` {.python .cell-code}\nx=uniform.rvs(loc=3, scale=4, size=20*10000)\nx = x.reshape(-1, 20)\nk_2=np.var(x, ddof=0, axis=1)\n\nsns.histplot(k_2)\nplt.axvline(x.var(), color='green',\n            linestyle='--', linewidth=2)\nplt.show()\nplt.clf()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](hw5_files/figure-html/cell-8-output-1.png){width=593 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n# 결과를 살펴보고, 왜 n-1로 나눈 것을 분산을 추정하는 지표로 사용하는 것이 타당한지 써주세요!\n모분산의 값이 n으로 나눈 값에서 중심을 잡는 것 보다 n-1로 나눈 값에서 중심을 잡는 것이 더 정확한 모습을 보여주기 때문이다.\n\n",
    "supporting": [
      "hw5_files"
    ],
    "filters": [],
    "includes": {}
  }
}