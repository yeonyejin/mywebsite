{
  "hash": "c46fe0ab87617f66d60d9c0b95a9b9ed",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"hw9\"\nauthor: \"연예진\"\ndata: \"2024 -09-10\"\ncategories: [bigdata]\njupyter: python3\n---\n\n종속변수: 백혈병 세포 관측 불가 여부 (REMISS), 1이면 관측 안됨을 의미\n\n독립변수:\n\n골수의 세포성 (CELL)\n골수편의 백혈구 비율 (SMEAR)\n골수의 백혈병 세포 침투 비율 (INFIL)\n골수 백혈병 세포의 라벨링 인덱스 (LI)\n말초혈액의 백혈병 세포 수 (BLAST)\n치료 시작 전 최고 체온 (TEMP)\n\n# 문제 1.\n# 데이터를 로드하고, 로지스틱 회귀모델을 적합하고, 회귀 표를 작성하세요.\n\n::: {#6c04fd84 .cell execution_count=1}\n``` {.python .cell-code}\nimport statsmodels.api as sm\nimport pandas as pd\n\ndata= pd.read_table('C:/Users/USER/Documents/LS빅데이터스쿨/LSbigdata-project1/data/leukemia_remission.txt', delimiter='\\t')\nprint(data.head())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   REMISS  CELL  SMEAR  INFIL   LI  BLAST  TEMP\n0       1   0.8   0.83   0.66  1.9   1.10  1.00\n1       1   0.9   0.36   0.32  1.4   0.74  0.99\n2       0   0.8   0.88   0.70  0.8   0.18  0.98\n3       0   1.0   0.87   0.87  0.7   1.05  0.99\n4       1   0.9   0.75   0.68  1.3   0.52  0.98\n```\n:::\n:::\n\n\n# 독립 변수와 종속 변수 설정\n 예를 들어 '종속변수'는 'remission', 독립변수는 'feature1', 'feature2' 등으로 설정\n\n::: {#9ab2a6bb .cell execution_count=2}\n``` {.python .cell-code}\nX = data[['CELL', 'SMEAR', 'INFIL', 'LI', 'BLAST', 'TEMP']]  # 독립 변수\ny = data['REMISS']  # 종속 변수\n```\n:::\n\n\n# 상수항 추가\n\n::: {#4001e23d .cell execution_count=3}\n``` {.python .cell-code}\nX = sm.add_constant(X)\n```\n:::\n\n\n# 로지스틱 회귀 모델 적합\n\n::: {#2cae1ec9 .cell execution_count=4}\n``` {.python .cell-code}\nmodel = sm.Logit(y, X)\nresult = model.fit()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimization terminated successfully.\n         Current function value: 0.399886\n         Iterations 10\n```\n:::\n:::\n\n\n# 회귀 표 출력\n\n::: {#ec208b45 .cell execution_count=5}\n``` {.python .cell-code}\nprint(result.summary())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                           Logit Regression Results                           \n==============================================================================\nDep. Variable:                 REMISS   No. Observations:                   27\nModel:                          Logit   Df Residuals:                       20\nMethod:                           MLE   Df Model:                            6\nDate:                Tue, 10 Sep 2024   Pseudo R-squ.:                  0.3718\nTime:                        10:51:58   Log-Likelihood:                -10.797\nconverged:                       True   LL-Null:                       -17.186\nCovariance Type:            nonrobust   LLR p-value:                   0.04670\n==============================================================================\n                 coef    std err          z      P>|z|      [0.025      0.975]\n------------------------------------------------------------------------------\nconst         64.2581     74.965      0.857      0.391     -82.670     211.187\nCELL          30.8301     52.135      0.591      0.554     -71.353     133.013\nSMEAR         24.6863     61.526      0.401      0.688     -95.903     145.275\nINFIL        -24.9745     65.281     -0.383      0.702    -152.923     102.974\nLI             4.3605      2.658      1.641      0.101      -0.849       9.570\nBLAST         -0.0115      2.266     -0.005      0.996      -4.453       4.430\nTEMP        -100.1734     77.753     -1.288      0.198    -252.567      52.220\n==============================================================================\n\nPossibly complete quasi-separation: A fraction 0.11 of observations can be\nperfectly predicted. This might indicate that there is complete\nquasi-separation. In this case some parameters will not be identified.\n```\n:::\n:::\n\n\n# 문제 2.\n\n# 해당 모델은 통계적으로 유의한가요? 그 이유를 검정통계량를 사용해서 설명하시오.\n\n::: {#6b99b5f7 .cell execution_count=6}\n``` {.python .cell-code}\nfrom scipy.stats import norm\n\nstat_value=-2*(-17.186 - (-10.797))\n\nfrom scipy.stats import chi2\n\n1-chi2.cdf(stat_value, df=6) \n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\nnp.float64(0.04669995098322843)\n```\n:::\n:::\n\n\n0.04669995098322843\n\np-value는 0.05보다 작으므로, 귀무가설을 기각할 수 있다. \n즉, 이 회귀모델은 전체적으로 통계적으로 유의하다고 할 수 있다.\n\n\n# 문제3. 유의수준 0.2를 기준으로 통계적으로 유의한 변수\n# 통계적으로 유의한 변수는 몇개이며, 어느 변수 인가요?\n\n통계적으로 유의미한 변수는 2개 이며 , LI와 TEMP이다. \n\n\n# 문제 4. 다음 환자에 대한 오즈는 얼마인가요?\nCELL (골수의 세포성): 65%\nSMEAR (골수편의 백혈구 비율): 45%\nINFIL (골수의 백혈병 세포 침투 비율): 55%\nLI (골수 백혈병 세포의 라벨링 인덱스): 1.2\nBLAST (말초혈액의 백혈병 세포 수): 1.1세포/μL\nTEMP (치료 시작 전 최고 체온): 0.9\n\n::: {#2a3d8402 .cell execution_count=7}\n``` {.python .cell-code}\nimport numpy as np\n\n# 주어진 회귀 계수\nintercept = 64.2581\ncoef_cell = 30.8301\ncoef_smear = 24.6863\ncoef_infil = -24.9745\ncoef_li = 4.3605\ncoef_blast = -0.0115\ncoef_temp = -100.1734\n\n# 주어진 환자 데이터\ncell = 0.65\nsmear = 0.45\ninfil = 0.55\nli = 1.2\nblast = 1.1\ntemp = 0.9\n\n# 선형 결합 계산\nlog_odds = (intercept +\n            coef_cell * cell +\n            coef_smear * smear +\n            coef_infil * infil +\n            coef_li * li +\n            coef_blast * blast +\n            coef_temp * temp)\n\n# 오즈 계산\nodds = np.exp(log_odds)\nodds\n\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\nnp.float64(0.03817459641135519)\n```\n:::\n:::\n\n\n# 0.038\n\n# 문제 5. 위 환자의 혈액에서 백혈병 세포가 관측되지 않은 확률은 얼마인가요?\n\n::: {#cc14cb77 .cell execution_count=8}\n``` {.python .cell-code}\n# 확률 계산\nprobability = odds / (1 + odds)\nprobability\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\nnp.float64(0.03677088280074742)\n```\n:::\n:::\n\n\n# 0.0367\n\n# 문제 6. TEMP 변수의 계수는 얼마이며, 해당 계수를 사용해서 TEMP 변수가 백혈병 치료에 대한 영향을 설명하시오.\n\nTEMP 변수의 계수는 -100.1734이다. 이 값은 TEMP(체온)가 증가할수록 백혈병이 완치될 확률이 크게 감소한다는 것을 의미합니다. \n체온이 낮을수록 백혈병 치료에 긍정적인 영향을 미친다고 해석할 수 있습니다.\n\n::: {#f329eb1f .cell execution_count=9}\n``` {.python .cell-code}\n#오즈값구하기 0.0381748712694388\nmy_odds = np.exp(64.2581 +30.8301*0.65 + 24.686316*0.45 -24.9745*0.55 +4.3605*1.2 -0.0115*1.1 -100.1734*1)\nmy_odds\n\n0.0381 #temp 0.9\n1.703  #temp 1\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```\n1.703\n```\n:::\n:::\n\n\n# 문제 7. CELL 변수의 99% 오즈비에 대한 신뢰구간을 구하시오.\n\n::: {#7e335f74 .cell execution_count=10}\n``` {.python .cell-code}\nfrom scipy.stats import norm\n\n# CELL 변수의 계수와 표준 오차\ncoef = coef_cell = 30.8301\nstd_err = 52.135\n\n# 99% 신뢰구간 계산\nz_value = norm.ppf(0.995)  # 99%에 해당하는 z-value\nlower_bound = np.exp(coef - z_value * std_err)\nupper_bound = np.exp(coef + z_value * std_err)\nlower_bound, upper_bound\nlower_bound = 1.16832\nupper_bound = 5.14188\n```\n:::\n\n\n# 문제 8. 주어진 데이터에 대하여 로지스틱 회귀 모델의 예측 확률을 구한 후, 50% 이상인 경우 1로 처리하여, 혼동 행렬를 구하시오.\n\n::: {#6446abf1 .cell execution_count=11}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix\nimport statsmodels.api as sm\n\n# 데이터 준비 및 로지스틱 회귀 모델 피팅\n# 예를 들어, 'X'와 'y'는 주어진 데이터, 타겟 변수입니다.\n\n# 주어진 데이터에 상수 열 추가 (절편을 포함하기 위함)\nX = sm.add_constant(X)\nmodel = sm.Logit(y, X)\nresult = model.fit()\n\n# 예측 확률 계산\ny_pred_prob = result.predict(X)\n\n# 50% 이상이면 1로 처리 (이진 분류)\ny_pred_class = (y_pred_prob >= 0.5).astype(int)\n\n# 혼동 행렬 계산\ncm = confusion_matrix(y, y_pred_class)\n\n# 혼동 행렬 시각화\nplt.figure(figsize=(8, 6))\nsns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False, annot_kws={\"size\": 15})\nplt.title('Confusion Matrix')\nplt.xlabel('Predicted Label')\nplt.ylabel('True Label')\nplt.show()\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimization terminated successfully.\n         Current function value: 0.399886\n         Iterations 10\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](hw9_files/figure-html/cell-12-output-2.png){width=655 height=523}\n:::\n:::\n\n\n# 문제 9. 해당 모델의 Accuracy는 얼마인가요?\n\n::: {#666043ab .cell execution_count=12}\n``` {.python .cell-code}\n(15+5)/27\n\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```\n0.7407407407407407\n```\n:::\n:::\n\n\n# 문제 10. 해당 모델의 F1 Score를 구하세요\n\n::: {#c566215b .cell execution_count=13}\n``` {.python .cell-code}\n2*(1/((1/(5/8))+(1/(5/9))))\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```\n0.5882352941176471\n```\n:::\n:::\n\n\n",
    "supporting": [
      "hw9_files"
    ],
    "filters": [],
    "includes": {}
  }
}