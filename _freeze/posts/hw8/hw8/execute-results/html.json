{
  "hash": "36ca87f52307dce4ba5c40c764acc8ba",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"hw8\"\nauthor: \"연예진\"\ndata: \"2024 -09-02\"\ncategories: [bigdata]\njupyter: python3\n---\n\n\n# ADP 표본점수\n2022년에 실시 된 ADP 실기 시험의 통계파트 표준점수는 평균이 30, 표준편차가 5인 정규분포를 따른다고 한다.\n1) ADP 실기 시험의 통계파트 표준점수의 밀도함수를 그려보세요.\n\n::: {#1c9b3331 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\n\nx = np.linspace(15, 45, 500)\ny = norm.pdf(x, loc=30, scale=5)\nplt.plot(x, y) \n```\n\n::: {.cell-output .cell-output-display}\n![](hw8_files/figure-html/cell-2-output-1.png){width=579 height=411}\n:::\n:::\n\n\n2) ADP 수험생을 임의로 1명을 선택하여 통계 점수를 조회했을때 45점 보다 높은 점수를 받았을 확률을 구하세요.\n\n::: {#3d078694 .cell execution_count=2}\n``` {.python .cell-code}\n1 - norm.cdf(45, 30, 5)\n```\n\n::: {.cell-output .cell-output-display execution_count=34}\n```\nnp.float64(0.0013498980316301035)\n```\n:::\n:::\n\n\n0.001349\n\n3) 슬통이는 상위 10%에 해당하는 점수를 얻었다고 한다면, 슬통이의 점수는 얼마인지 계산해보세요.\n\n::: {#92a8d60e .cell execution_count=3}\n``` {.python .cell-code}\nnorm.ppf(0.9, 30, 5)\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\nnp.float64(36.407757827723)\n```\n:::\n:::\n\n\n36.407\n\n4) 슬기로운 통계생활의 해당 회차 수강생은 16명이었다고 한다. 16명의 통계 파트 점수를 평균내었을 때, 이 평균값이 따르는 분포의 확률밀도 함수를 1번의 그래프와 겹쳐 그려보세요.\n\n::: {#2a55a04e .cell execution_count=4}\n``` {.python .cell-code}\nx = np.linspace(15, 45, 500)\ny = norm.pdf(x, loc=30, scale=5)\nplt.plot(x, y) \n\ny2 = norm.pdf(x, loc=30, scale=5/np.sqrt(16))\nplt.plot(x, y2, color=\"red\")\n```\n\n::: {.cell-output .cell-output-display}\n![](hw8_files/figure-html/cell-5-output-1.png){width=579 height=411}\n:::\n:::\n\n\n5) 슬기로운 통계생활 ADP 반 수강생들의 통계점수를 평균내었다고 할 때, 이 값이 38점보다 높게 나올 확률을 구하세요.\n\n::: {#a0a8a55f .cell execution_count=5}\n``` {.python .cell-code}\n1-norm.cdf(38, loc=30, scale=5/np.sqrt(16))\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n```\nnp.float64(7.76885222819601e-11)\n```\n:::\n:::\n\n\n7.76885222819601e-11\n\n# Covid 19 발병률\nCovid‑19의 발병률은 1%라고 한다. 다음은 이번 코로나 사태로 인하여 코로나 의심 환자들 1,085명을 대상으로 슬통 회사의 “다잡아” 키트를 사용하여 양성 반응을 체크한 결과이다.\n키트 \\ 실제 양성 음성\n양성 370 10\n음성 15 690\n\n1) 다잡아 키트가 코로나 바이러스에 걸린 사람을 양성으로 잡아낼 확률을 계산하세요.\n\n::: {#3f72c0e2 .cell execution_count=6}\n``` {.python .cell-code}\n370/385\n```\n\n::: {.cell-output .cell-output-display execution_count=38}\n```\n0.961038961038961\n```\n:::\n:::\n\n\n2) 슬통 회사에서 다잡아 키트를 사용해 양성으로 나온 사람이 실제로는 코로나 바이러스에 걸려있을 확률을 97%라며, 키트의 우수성을 주장했다. 이 주장이 옳지 않은 이유를 서술하세요.\n\n표본으로 뽑힌 집단의 확률과 슬통회사에서 주장한 확률이 다르다.\n\n3) Covid‑19 발병률을 사용하여,키트의 결과값이 양성으로 나온 사람이 실제로 코로나 바이러스에 걸려있을 확률을 구하세요.\n\n::: {#08895b8f .cell execution_count=7}\n``` {.python .cell-code}\n(0.01* (370/385)) / (0.01 * (370/385) + 0.99 * (10 / 700))\n```\n\n::: {.cell-output .cell-output-display execution_count=39}\n```\n0.4045926735921268\n```\n:::\n:::\n\n\n0.40459\n\n\n# 카이제곱분포와 표본분산\n자유도가 𝑘인 카이제곱분포를 따르는 확률변수 𝑋 를 𝑋 ∼ (𝜒^2)*(𝑘)과 같이 나타내고, 이 확률변수의 확률밀도함수는 다음과 같습니다.\n\n\n\n다음의 물음에 답하세요.\n1) 자유도가 4인 카이제곱분포의 확률밀도함수를 그려보세요.\n\n::: {#08d70ee9 .cell execution_count=8}\n``` {.python .cell-code}\nfrom scipy.stats import chi2\nimport matplotlib.pyplot as plt\nimport numpy as np\nk=np.linspace(-2, 40, 500)\ny=chi2.pdf(k, df=4)\nplt.plot(k, y, color= \"black\")\n```\n\n::: {.cell-output .cell-output-display}\n![](hw8_files/figure-html/cell-9-output-1.png){width=587 height=411}\n:::\n:::\n\n\n2) 다음의 확률을 구해보세요.\n𝑃 (3 ≤ 𝑋 ≤ 5)\n\n::: {#5ce3491b .cell execution_count=9}\n``` {.python .cell-code}\nchi2.cdf(5, 4) - chi2.cdf(3, 4)\n```\n\n::: {.cell-output .cell-output-display execution_count=41}\n```\nnp.float64(0.27052790518742903)\n```\n:::\n:::\n\n\n3) 자유도가 4인 카이제곱분포에서 크기가 1000인 표본을 뽑은 후, 히스토그램을 그려보세요.\n\n::: {#4b9ca6f9 .cell execution_count=10}\n``` {.python .cell-code}\nimport numpy as np\nnp.random.seed(2024)\n#chi2.rvs(df, loc=0, scale=1, size=1, random_state=None)\nx = chi2.rvs(4, loc=0, scale=1, size=1000)\nplt.hist(x, color = \"black\",histtype='bar')\nplt.figure()\n```\n\n::: {.cell-output .cell-output-display}\n![](hw8_files/figure-html/cell-11-output-1.png){width=586 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n4) 자유도가 4인 카이제곱분포를 따르는 확률변수에서 나올 수 있는 값 중 상위 5%에 해당하는 값은 얼마인지 계산해보세요.\n\n::: {#f316429c .cell execution_count=11}\n``` {.python .cell-code}\nimport scipy.stats as stats\ndata =stats.chi2(4, loc=0, scale=1)\ndata.ppf(0.95) \n\n```\n\n::: {.cell-output .cell-output-display execution_count=43}\n```\nnp.float64(9.487729036781154)\n```\n:::\n:::\n\n\ndata.ppf(0.95) = 9.487\n\n5) 3번에서 뽑힌 표본값들 중 상위 5%에 위치한 표본의 값은 얼마인가요?\n\n::: {#548217c6 .cell execution_count=12}\n``` {.python .cell-code}\nnp.percentile(x, 95)\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n```\nnp.float64(10.006310615752485)\n```\n:::\n:::\n\n\n10.006\n\n6) 평균이 3, 표준편차가 2인 정규분포를 따르는 확률변수에서 크기가 20인 표본, 𝑥1, ..., 𝑥20,을 뽑은 후 표본분산을 계산한 것을 𝑠1^2이라 생각해보죠. 다음을 수행해보세요!\n\n::: {#c2e466c4 .cell execution_count=13}\n``` {.python .cell-code}\nfrom scipy.stats import norm\n\nnp.random.seed(2024)\nx = norm.rvs(3, 2, size=20)\n\n```\n:::\n\n\n• 같은 방법으로 500개의 𝑠^2 들, 𝑠(1)^2, 𝑠(2)^2, ..., 𝑠(500)^2 발생시킵니다.\n\n::: {#383736d8 .cell execution_count=14}\n``` {.python .cell-code}\nsamples=[]\n\nfor i in range(500):\n    x = norm.rvs(3, 2, size=20)\n    samples.append(np.var(x, ddof=1))\n\n```\n:::\n\n\n• 발생한 500개의 𝑠^2 들 각각에 4.75를 곱하고, 그것들의 히스토그램을 그려보세요. (히스토그램을 그릴 때 probability = TRUE 옵션을 사용해서 그릴 것)\n\n::: {#a11b21fb .cell execution_count=15}\n``` {.python .cell-code}\nnew_samples = np.array(samples) * 4.75\nplt.hist(new_samples, density = True, color=\"black\")\nplt.figure()\n```\n\n::: {.cell-output .cell-output-display}\n![](hw8_files/figure-html/cell-16-output-1.png){width=579 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n• 위에서 그린 히스토그램에 자유도가 19인 카이제곱분포 확률밀도함수를 겹쳐그려보세요.\n\n::: {#66d89219 .cell execution_count=16}\n``` {.python .cell-code}\nnew_samples = np.array(samples) * 4.75\nplt.hist(new_samples, density = True, color=\"black\")\nk=np.linspace(-2, 40, 500)\ny=chi2.pdf(k, df=19)\nplt.plot(k, y, color= \"red\")\n```\n\n::: {.cell-output .cell-output-display}\n![](hw8_files/figure-html/cell-17-output-1.png){width=579 height=411}\n:::\n:::\n\n\n",
    "supporting": [
      "hw8_files"
    ],
    "filters": [],
    "includes": {}
  }
}