{
  "hash": "b16a0ee63d30c6f2970b3572a11c8243",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: hw6\nauthor: 연예진\ndata: 2024 -07-30\ncategories:\n  - bigdata\n---\n\n::: {#000fd21a .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nraw_welfare = pd.read_spss('Koweps_hpwc14_2019_beta2.sav')\nraw_welfare\n\nwelfare=raw_welfare.copy()\nwelfare.shape\nwelfare.describe()\n\nwelfare=welfare.rename(\n    columns = {\n        \"h14_g3\": \"sex\",\n        \"h14_g4\": \"birth\",\n        \"h14_g10\": \"marriage_type\",\n        \"h14_g11\": \"religion\",\n        \"p1402_8aq1\": \"income\",\n        \"h14_eco9\": \"code_job\",\n        \"h14_reg7\": \"code_region\"\n        \n    }\n)\n\nwelfare = welfare[[\"sex\", \"birth\", \"marriage_type\",\n                  \"religion\", \"income\", \"code_job\", \"code_region\"]]\n                  \nwelfare.shape\n\nwelfare[\"sex\"].dtypes\nwelfare[\"sex\"].value_counts()\n#welfare[\"sex\"].isna().sum()\n\n\nwelfare[\"sex\"] = np.where(welfare[\"sex\"] == 1, 'male', 'female')\nwelfare[\"sex\"].value_counts()\n\n\nwelfare[\"income\"].describe()\nwelfare[\"income\"].isna().sum()\n\nsex_income=welfare.dropna(subset=\"income\")\\\n       .groupby(\"sex\", as_index=False)\\\n       .agg(mean_income = (\"income\", \"mean\"))\nsex_income\n\nimport seaborn as sns\nsns.barplot(data=sex_income, x=\"sex\", y=\"mean_income\",\n            hue=\"sex\")\n            \n\nplt.show()\nplt.clf()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](hw6_files/figure-html/cell-2-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n#각 성별 평균을 구분하기 위해 query로 뺌\n\n::: {#59af0773 .cell execution_count=2}\n``` {.python .cell-code}\nfemale = welfare.dropna(subset=\"income\").query(\"sex == 'female'\")[\"income\"]\nmale = welfare.dropna(subset=\"income\").query(\"sex == 'male'\")[\"income\"]  \n```\n:::\n\n\n#표본평균\n\n::: {#addad04c .cell execution_count=3}\n``` {.python .cell-code}\nfm=female.mean()\nmm=male.mean()\n```\n:::\n\n\n#데이터 갯수\n\n::: {#47d2dea7 .cell execution_count=4}\n``` {.python .cell-code}\nfc=female.count()\nmc=male.count()\n```\n:::\n\n\n#표준편차\n\n::: {#a6bcd6c9 .cell execution_count=5}\n``` {.python .cell-code}\nfs=female.std()\nms=male.std()\n```\n:::\n\n\n#분산\n\n::: {#8139755a .cell execution_count=6}\n``` {.python .cell-code}\nfv=female.var()\nmv=male.var()\n```\n:::\n\n\n#신뢰구간\n\n::: {#c4b9e110 .cell execution_count=7}\n``` {.python .cell-code}\nfrom scipy.stats import norm\n\nz_005=norm.ppf(0.95, loc=0, scale=1)\nz_005\nfz_max=fm + z_005 * (fs/ np.sqrt(fc))\nfz_min=fm - z_005 * (fs/ np.sqrt(fc))\n\n\nz_005=norm.ppf(0.95, loc=0, scale=1)\nz_005\nmz_max=mm + z_005 * (ms/ np.sqrt(mc))\nmz_min=mm - z_005 * (ms/ np.sqrt(mc))\n\n```\n:::\n\n\n# 오차막대 그리기\n\n::: {#8b0384f4 .cell execution_count=8}\n``` {.python .cell-code}\nimport seaborn as sns\nsns.barplot(data=sex_income, x=\"sex\", y=\"mean_income\",\n            hue=\"sex\")\n            \nplt.vlines(x = \"female\", ymin = fz_min, ymax = fz_max, colors = \"black\")\nplt.vlines(x = \"male\", ymin = mz_min, ymax = mz_max, colors = \"black\")            \n\nplt.show()\nplt.clf()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](hw6_files/figure-html/cell-9-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "hw6_files"
    ],
    "filters": [],
    "includes": {}
  }
}