[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "testwebsite",
    "section": "",
    "text": "안녕하세요\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n2"
  },
  {
    "objectID": "index.html#홈페이지-첫-화면-입니다",
    "href": "index.html#홈페이지-첫-화면-입니다",
    "title": "testwebsite",
    "section": "",
    "text": "안녕하세요\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({\n    \"col1\": [1, 2, 3]\n})"
  },
  {
    "objectID": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "hw1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({\n    \"col1\": [1, 2, 3]\n})"
  },
  {
    "objectID": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해보세요.",
    "href": "hw1.html#다음-표의-내용을-데이터-프레임으로-만들어-출력해보세요.",
    "title": "hw1",
    "section": "다음 표의 내용을 데이터 프레임으로 만들어 출력해보세요.",
    "text": "다음 표의 내용을 데이터 프레임으로 만들어 출력해보세요.\n\nimport pandas as pd\n\ndf = pd.DataFrame({\n    \"product\" : [\"사과\", \"딸기\", \"수박\"],\n    \"price\"   : [1800, 1500, 3000],\n    \"volume\"  : [24, 38, 13]\n})\ndf\n\n\n\n\n\n\n\n\nproduct\nprice\nvolume\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n##앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해보세요.\n\nimport pandas as pd\n\ndf = pd.DataFrame({\n    \"product\" : [\"사과\", \"딸기\", \"수박\"],\n    \"price\"   : [1800, 1500, 3000],\n    \"volume\"  : [24, 38, 13]\n})\ndf\n\ndf_mean =sum(df[\"price\"]) / 3\n\ndf_mean \n\n2100.0\n\n\n과일 가격의 평균은 2100 원이다.\n\nimport pandas as pd\n\ndf = pd.DataFrame({\n    \"product\" : [\"사과\", \"딸기\", \"수박\"],\n    \"price\"   : [1800, 1500, 3000],\n    \"volume\"  : [24, 38, 13]\n})\ndf\n\n\ndf_mean_v = sum(df[\"volume\"]) /3\n\ndf_mean_v\n\n25.0\n\n\n과일의 판매량 평균은 25이다."
  },
  {
    "objectID": "hw1.html#p115-mpg데이터를-이용해-분석문제-해결하기",
    "href": "hw1.html#p115-mpg데이터를-이용해-분석문제-해결하기",
    "title": "hw1",
    "section": "p115 mpg데이터를 이용해 분석문제 해결하기",
    "text": "p115 mpg데이터를 이용해 분석문제 해결하기\nQ1. mpg데이터를 불러와 복사본을 만드세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\n\ndf_new = df.copy()\ndf_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\nQ2, 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\n\ndf_new = df.copy()\ndf_new\n\ndf_new = df_new.rename(columns = {'cty' : 'city'})\ndf_new = df_new.rename(columns = {'hwy' : 'highway'})\ndf_new\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\nQ3. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해보세요. 다음과 같은 결과물이 출력되어야 합니다.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\n\ndf_new = df.copy()\ndf_new\n\ndf_new = df_new.rename(columns = {'cty' : 'city'})\ndf_new = df_new.rename(columns = {'hwy' : 'highway'})\ndf_new\n\ndf_new[['city','highway']]\n\n\n\n\n\n\n\n\ncity\nhighway\n\n\n\n\n0\n18\n29\n\n\n1\n21\n29\n\n\n2\n20\n31\n\n\n3\n21\n30\n\n\n4\n16\n26\n\n\n...\n...\n...\n\n\n229\n19\n28\n\n\n230\n21\n29\n\n\n231\n16\n26\n\n\n232\n18\n26\n\n\n233\n17\n26\n\n\n\n\n234 rows × 2 columns\n\n\n\n##p130 midwest.csv는 미국 동북중부(East North Central States) 437개 지역의 인구 통계 정보를 담고 있습니다. midwest.csv를 이용해 데이터 분석문제를 해결해 보세요.\nQ1. midwesst.csv를 불러와 데이터의 특징을 파악하세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('midwest.csv')\n\ndf.shape\ndf.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\nQ2. poptotal(전체 인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('midwest.csv')\ndf\n\ndf_new = df.copy()\ndf_new = df_new.rename(columns = { 'poptotal':'total'}) \ndf_new = df_new.rename(columns = { 'popasian':'asian'}) \ndf_new\n\ndf_new[['total','asian']]\n\n\n\n\n\n\n\n\ntotal\nasian\n\n\n\n\n0\n66090\n249\n\n\n1\n10626\n48\n\n\n2\n14991\n16\n\n\n3\n30806\n150\n\n\n4\n5836\n5\n\n\n...\n...\n...\n\n\n432\n304715\n2699\n\n\n433\n46104\n92\n\n\n434\n19385\n43\n\n\n435\n140320\n1728\n\n\n436\n73605\n722\n\n\n\n\n437 rows × 2 columns\n\n\n\nQ3. total, asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요\n\nimport pandas as pd\n\ndf = pd.read_csv('midwest.csv')\ndf\n\ndf_new = df.copy()\ndf_new = df_new.rename(columns = { 'poptotal':'total'}) \ndf_new = df_new.rename(columns = { 'popasian':'asian'}) \ndf_new\n\ndf_new['per'] =(df_new['asian']/df_new['total'])* 100\ndf_new\n\ndf_new['per'].plot.hist()\n\n\n\n\n\n\n\n\nQ4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nimport pandas as pd\nimport numpy as np\n\n\ndf = pd.read_csv('midwest.csv')\ndf\n\ndf_new = df.copy()\ndf_new = df_new.rename(columns = { 'poptotal':'total'}) \ndf_new = df_new.rename(columns = { 'popasian':'asian'}) \ndf_new\ndf_new['per'] =(df_new['asian']/df_new['total'])*100\ndf_new\ndf_new['per'].mean() \n\n\ndf_new['size'] = np.where(df_new['per'] &gt; 0.4872, 'large', 'small' )\ndf_new['size']\n\n0      small\n1      small\n2      small\n3      small\n4      small\n       ...  \n432    large\n433    small\n434    small\n435    large\n436    large\nName: size, Length: 437, dtype: object\n\n\nQ5. ’large’와 ’small’에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해보세요.\n\nimport pandas as pd\nimport numpy as np\n\n\ndf = pd.read_csv('midwest.csv')\ndf\n\ndf_new = df.copy()\ndf_new = df_new.rename(columns = { 'poptotal':'total'}) \ndf_new = df_new.rename(columns = { 'popasian':'asian'}) \ndf_new\ndf_new['per'] =(df_new['asian']/df_new['total'])*100\ndf_new\ndf_new['per'].mean() \n\n\ndf_new['size'] = np.where(df_new['per'] &gt; 0.4872, 'large', 'small' )\ndf_new['size']\n\ncount_test = df_new['size'].value_counts()\ncount_test.plot.bar(rot = 0)"
  },
  {
    "objectID": "hw2.html",
    "href": "hw2.html",
    "title": "hw2",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.read_csv('mpg.csv')\ndf\n\ndf4 = df.query('displ&lt;= 4')\ndf5 = df.query('displ&gt;= 5')\n\ndf4['hwy'].mean()\ndf5['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n배기량이 4이하인 자동차의 hwy평균이 더 높다.\nQ2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비)의 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\ndf\n\ndf_audi = df.query('manufacturer == \"audi\"')\ndf_toyota = df.query('manufacturer == \"toyota\"')\n\n\ndf_audi['cty'].mean()\ndf_toyota['cty'].mean()\n\nnp.float64(18.529411764705884)\n\n\ntoyoya의 cty 평균이 더 높은 것을 알 수 있다.\n\n\n\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\ndf\n\ndf_new = df.query('manufacturer in[\"chevrolet\", \"ford\", \"honda\"]')\n\ndf_new['hwy'].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "hw2.html#mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "href": "hw2.html#mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "title": "hw2",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.read_csv('mpg.csv')\ndf\n\ndf4 = df.query('displ&lt;= 4')\ndf5 = df.query('displ&gt;= 5')\n\ndf4['hwy'].mean()\ndf5['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n배기량이 4이하인 자동차의 hwy평균이 더 높다.\nQ2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ‘audi’와 ’toyota’ 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비)의 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\ndf\n\ndf_audi = df.query('manufacturer == \"audi\"')\ndf_toyota = df.query('manufacturer == \"toyota\"')\n\n\ndf_audi['cty'].mean()\ndf_toyota['cty'].mean()\n\nnp.float64(18.529411764705884)\n\n\ntoyoya의 cty 평균이 더 높은 것을 알 수 있다.\n\n\n\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\ndf\n\ndf_new = df.query('manufacturer in[\"chevrolet\", \"ford\", \"honda\"]')\n\ndf_new['hwy'].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "hw2.html#p153-mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "href": "hw2.html#p153-mpg-데이터를-이용해-분석-문제를-해결해-보세요.",
    "title": "hw2",
    "section": "p153 mpg 데이터를 이용해 분석 문제를 해결해 보세요.",
    "text": "p153 mpg 데이터를 이용해 분석 문제를 해결해 보세요.\nQ1. ’audi’에서 생산한 자동차 중 어떤 자동차 모델위 hwy(고속도로 연비)가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\ndf\n\ndf.query('manufacturer == \"audi\"')\\\n  .sort_values('hwy', ascending = False)\\\n  .head(5)\n\n\n\n#df_audi = df.query('manufacturer == \"audi\"')\n#df_audi.sort_values('hwy', ascending = False).head(5)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "hw2.html#p158-mpg데이터를-이용해-분석문제를-해결해-보세요.",
    "href": "hw2.html#p158-mpg데이터를-이용해-분석문제를-해결해-보세요.",
    "title": "hw2",
    "section": "p158 mpg데이터를 이용해 분석문제를 해결해 보세요.",
    "text": "p158 mpg데이터를 이용해 분석문제를 해결해 보세요.\nmpg데이터는 연비를 나타내는 변수가 hwy(고속도로 연비), cty(도시 연비) 두 종류로 분리되어 있습니다. 두 변수를 각각 활용하는 대신 하나의 합산 연비 변수를 만들어 분석하려고 합니다.\nQ1. mpg데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\nmpg = df.copy()\n\nmpg.assign( total = mpg['cty'] + mpg['hwy'])\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n\n\n\n\n234 rows × 12 columns\n\n\n\nQ2. 앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\nmpg = df.copy()\n\nmpg.assign( total = mpg['cty'] + mpg['hwy'],\n            mean = (mpg['cty'] + mpg['hwy'])/2)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns\n\n\n\nQ3. ’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nimport pandas as pd\n\ndf = pd.read_csv('mpg.csv')\nmpg = df.copy()\n\nmpg = mpg.assign(\n        total = mpg['cty'] + mpg['hwy'],\n        mean = (mpg['cty'] + mpg['hwy'])/2)\n\nmean = (mpg['cty'] + mpg['hwy'])/2\nmpg.sort_values('mean', ascending = False)\\\n.head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n\n\n\n\n\nQ4. 1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg원본을 이용하세요.\n\nimport pandas as pd\n\nmpg = pd.read_csv('mpg.csv')\nmpg = mpg.assign(\n            total = lambda x:  x['cty'] + x['hwy'],\n            mean = lambda x : x['total']/2) \\\n         .sort_values('mean', ascending = False )\\\n         .head(3)\nmpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ntotal\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  }
]